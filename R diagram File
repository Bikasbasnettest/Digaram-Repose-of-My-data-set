
#after reading the data frame in R
require(ggplot2)
ggplot(Bikas, aes(x = VAR, 
                  y = LOP, 
                  fill = VAR)) +
  geom_boxplot(show.legend = FALSE,
               outlier.shape = NA) +
  geom_jitter()




ggplot(Bikas, aes(x = VAR, y = X30DNL, fill = VAR)) +
  geom_violin(width = .9) +  
  geom_boxplot(width = 0.2, position = position_identity()) +  # Corrected position setting
  labs(x = "Genotypes of the Mung bean", y = "Diameter of the Root Nodules") +
  theme_minimal()
# to add the Center line on data 
library(dplyr)
center_data<-Bikas %>%
  group_by(VAR) %>%
  summarize(Center = median(X30DNL))

ggplot(Bikas, aes(x = VAR, y = X30DNL, fill = VAR)) +
  geom_violin(width = 1) +
  geom_boxplot(width = 0.6, position = position_identity()) +
  geom_segment(data = center_data, aes(x = VAR,  xend = VAR, y = 0, yend = Center),
               color = "black", size = 0.8, linetype = "solid") +  # Add connecting lines
  labs(x = "Genotypes of the Mung bean", y = "Diameter of the Root Nodules") +
  theme_minimal() +
  theme(axis.text.x = element_text(size = 8))
#for addition of the Elipse Biplot of the two dependent and independebt variables 
#for addiion of the Elipse Biplot of the data
library(ggplot2)
library(tidyverse)
library(ggforce)
ggplot(data = Bikas, aes(x = SPFDAAH,
           y = GY.ha))+
  geom_mark_ellipse(aes(color = VAR,
                        label= VAR),
                    expand = unit(0.5,'mm'),
                    label.buffer = unit(-5,'mm')) + labs(x = "Genotypes of the Mung bean", y = "Sample Plant Flower Drops After Application of Hormone") +
  geom_point(aes(color = VAR))+theme(legend.position = "bottom")
#for the creation of the INtegrated Box ad Viooin and DMRT mean Comparion letter and P value representation on the Plot

setwd("E:/Fertility problems in Mung bean/Mung Final analysis Folder")
Bikas<-read.csv("E:/Fertility problems in Mung bean/Mung Final analysis Folder/MFA.csv", header = TRUE)
attach(Bikas)
print(Bikas)
options(max.print = 1000)
Bikas$REP=as.factor(REP)
Bikas$VAR=as.factor(VAR)
library(ggplot2)
library(dplyr)
M<-aggregate(RL,by=list(VAR),mean)
require(gvlma)
fit=lm(RL~REP+VAR) 
gvmodelfit=gvlma(fit) 
gvmodelfit
anova(lm(RL~(REP+VAR)))
require(agricolae)
dmrtcomparison<-with(Bikas,duncan.test(RL, VAR, 223 , 1.8849))      
dmrtcomparison
#Given values for LSD value Getting
MSE<-1.8849                                                                                                                                                                                                                                                                                                                                                                                                                                                             
n<-240  
alpha<-0.05   
df_error<-223 
q_alpha<-qt(1 - alpha/2, df_error)
LSD_value<-q_alpha * sqrt(MSE / n)
print(LSD_value)
meanval<-Bikas%>%group_by(VAR)%>%summarize(mean(RL))
meanval
sig.let<-dmrtcomparison$groups[order(row.names(dmrtcomparison$groups)),]
sig.let
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggpubr)
P1 <- ggplot(data = Bikas, aes(x = VAR, y = RL)) +
  geom_boxplot(aes(fill = VAR)) + geom_violin(width = .7)+
  geom_text(data = meanval, aes(x = VAR, y = mean(RL), label = sig.let$groups), vjust = 0) +
  geom_errorbar(aes(x = VAR, ymin = RL - 0.6, ymax = RL + 0.6), width = 0.2) +
  ggtitle("DMRT Mean Comparison Plot") + xlab("Genotype of Mung bean") + ylab("RL")+stat_compare_means(method = "anova")+
  stat_compare_means(label = "p.signif", method = "anova") + rotate_x_text(angle = 45) +
  geom_text(aes(x = VAR[1], y = max(RL) + 1, label = paste("LSD =", round(LSD_value, 3)), hjust = 0), size = 4)

P1
#for combining the Multiple Png File.
library(png)
library(grid)
library(gridExtra)

# Read the images and create grobs
img1 <- rasterGrob(readPNG("FMC_RL.png"))
img2 <- rasterGrob(readPNG("FMCP_Root to Shoot Ratio.png"))
img3 <- rasterGrob(readPNG("FMCP-SL.png"))
img4 <- rasterGrob(readPNG("FMCP_Number of secondary Roots.png"))

# Create a grid of images
grid.arrange(img1, img2, img3, img4, ncol = 2)




